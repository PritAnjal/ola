<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="bookmyholiday-ola-sys-api-implementation-postCarBooking.xml" />
	<munit:test name="postCarBooking-test" doc:id="b3bd3a1e-7d52-4d92-a5b4-916af91b2735" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Insert The Booking Records" doc:id="23a0f1bc-3b33-4d82-a114-e514bb9c9f85" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a892a946-3b3a-40e3-b24d-fb26d506d2f9" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postCarBookingtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postCarBookingtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="bookingId" value="#[readUrl('classpath://postCarBookingtest\mock_variable_1.dwl')]" encoding="UTF-8" />
						<munit-tools:variable key="Name" value="#[output application/json --- readUrl('classpath://postCarBookingtest\mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Set Variable" doc:id="05fd9465-9ac7-4e03-a9d4-119d7667f21d" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="40097fa9-92bc-48ea-b0dc-253e5e462d3c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postCarBookingtest\mock_variable_3.dwl')]" />
						<munit-tools:variable key="bookingId" value="#[readUrl('classpath://postCarBookingtest\mock_variable_4.dwl')]" encoding="UTF-8" />
						<munit-tools:variable key="Name" value="#[output application/json --- readUrl('classpath://postCarBookingtest\mock_variable_5.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Set Variable" doc:id="7d6a79ad-d724-4c9b-a989-d2fbf244c27a" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2cad656c-a6bb-45b2-a1e3-68158cdbcb66" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postCarBookingtest\mock_variable_6.dwl')]" />
						<munit-tools:variable key="bookingId" value="#[readUrl('classpath://postCarBookingtest\mock_variable_7.dwl')]" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="85b9203e-b304-4978-8ea5-27f5f7fa3f31" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postCarBookingtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postCarBookingtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postCarBookingtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to postCarBooking" doc:id="4af49dfa-a559-4cd8-b8e2-68c7dcb7d11a" name="postCarBooking"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="00aace83-3f8a-48ea-ad18-77c2410215d3" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postCarBookingtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
